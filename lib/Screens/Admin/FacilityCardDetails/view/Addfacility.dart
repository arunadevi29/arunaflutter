import 'package:attendanceapp/CommenFiles/getXcontroller.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:get/get_core/src/get_main.dart';

import '../../../../CommenFiles/translateService.dart';
import '../../AddNewFacilityScreen/model/facilitymodeldata.dart';

class Addfacility extends StatefulWidget {
  const Addfacility({super.key});

  @override
  State<Addfacility> createState() => _AddfacilityState();
}

class _AddfacilityState extends State<Addfacility> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Row(
          children: [
            Text(
              TranslationService.translate('Add Field'),
              // "Facility",
              style: TextStyle(
                  fontSize: 25,
                  color: Colors.black,
                  fontWeight: FontWeight.w500),
            ),
          ],
        ),
        actions: [
          Padding(
            padding: const EdgeInsets.all(8.0),
            child: DropdownButton(
                underline: SizedBox(),
                icon: Icon(
                  Icons.language,
                  color: Colors.blue,
                  size: 35,
                ),
                items: const [
                  DropdownMenuItem(
                      value: "en",
                      child: Text(
                        'English',
                        style: TextStyle(color: Colors.black, fontSize: 18),
                      )),
                  DropdownMenuItem(
                      value: "ka",
                      child: Text(
                        'Kannada',
                        style: TextStyle(color: Colors.black, fontSize: 18),
                      )),
                ],
                onChanged: (value) {
                  controller.setLocale(value);
                }),
          )
        ],
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back_ios,
            size: 25,
          ),
          //tooltip: 'Setting Icon',
          onPressed: () {
            // Get.toNamed('/Siteheaddashboard');
            Get.toNamed('/FacilitiesScreen');
            // Navigator.of(context).push(
            //   MaterialPageRoute(builder: (context) => Admin_Dashboard()),
            // );
          },
        ),
      ),
      body: Column(
        children: [
          SizedBox(
            height: 40,
          ),
          Padding(
            padding: const EdgeInsets.all(8.0),
            child: Column(
              children: [
                TextField(
                    controller: facilityCardDetailsController.nameController,
                    decoration: InputDecoration(
                      labelText: "Field Name",
                      border: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(10),
                        // Rounded corners
                        borderSide: BorderSide(color: Colors.blue, width: 2),
                      ),
                    )),
                SizedBox(
                  height: 20,
                ),
                TextField(
                  controller: facilityCardDetailsController.imageController,
                  decoration: InputDecoration(
                    labelText: "Image URL",
                    border: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(10),
                      // Rounded corners
                      borderSide: BorderSide(color: Colors.blue, width: 2),
                    ),
                  ),
                ),
                //Image.asset(facilityCardDetailsController.image.toString()),
                SizedBox(height: 20),
                ElevatedButton(
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Colors.blue,
                    // Button background color
                    foregroundColor: Colors.white,
                    // Text color
                    padding: EdgeInsets.symmetric(horizontal: 30, vertical: 15),
                    // Button padding
                    shape: RoundedRectangleBorder(
                      borderRadius:
                          BorderRadius.circular(10), // Rounded corners
                    ),
                    elevation: 5, // Shadow effect
                  ),
                  onPressed: () async {
                    FacilityModels newFacility = FacilityModels(
                      id: 0, // ID will be auto-generated by the backend
                      fieldName: addnewfacilitycontroller.nameController.text,
                      fieldImage: addnewfacilitycontroller.imageController.text,
                      entryCount: int.tryParse(
                              addnewfacilitycontroller.entryController.text) ??
                          0,
                    );

                    bool isSuccess =
                        await addnewfacilitycontroller.addFacility(newFacility);

                    if (isSuccess) {
                      ScaffoldMessenger.of(context).showSnackBar(
                        SnackBar(content: Text("Facility added successfully!")),
                      );
                    } else {
                      ScaffoldMessenger.of(context).showSnackBar(
                        SnackBar(content: Text("Failed to add facility")),
                      );

                      // if (facilityCardDetailsController
                      //         .nameController.text.isNotEmpty &&
                      //     facilityCardDetailsController
                      //         .imageController.text.isNotEmpty) {
                      //   facilityCardDetailsController.addField(
                      //       facilityCardDetailsController.nameController.text,
                      //       facilityCardDetailsController.imageController.text,
                      //       facilityCardDetailsController.entryController.text);
                      //   facilityCardDetailsController.nameController.clear();
                      //   facilityCardDetailsController.imageController.clear();
                    }
                    Get.toNamed("/FacilitiesScreen");
                  },
                  child: Text("Add Facility"),
                ),
              ],
            ),
          ),
          // Padding(
          //   padding: const EdgeInsets.all(16.0),
          //   child: Column(
          //     children: [
          //       TextField(
          //         controller: facilityCardDetailsController.nameController,
          //         decoration: InputDecoration(labelText: "Enter Text"),
          //       ),
          //       SizedBox(height: 20),
          //
          //       // ðŸ“Œ Show selected image
          //       Obx(() =>
          //           facilityCardDetailsController.selectedImage.value == null
          //               ? Text("No image selected")
          //               : Image.file(
          //                   facilityCardDetailsController.selectedImage.value!,
          //                   height: 150)),
          //
          //       SizedBox(height: 20),
          //
          //       // ðŸ“Œ Pick Image Button
          //       Row(
          //         mainAxisAlignment: MainAxisAlignment.center,
          //         children: [
          //           ElevatedButton(
          //             onPressed: facilityCardDetailsController.pickImage,
          //             child: Text("Pick Image"),
          //           ),
          //           SizedBox(width: 20),
          //           ElevatedButton(
          //             onPressed: facilityCardDetailsController.uploadImage,
          //             child: Text("Upload Image"),
          //           ),
          //         ],
          //       ),
          //
          //       SizedBox(height: 20),
          //
          //       // ðŸ“Œ Upload Data Button
          //       ElevatedButton(
          //         onPressed: facilityCardDetailsController.uploadData,
          //         child: Text("Upload"),
          //       ),
          //     ],
          //   ),
          // ),
        ],
      ),
    );
  }
}
